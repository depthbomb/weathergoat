{
	"common": {
		"err": {
			"invalidLatOrLon": "The provided latitude or longitude is not valid.",
			"guildOnly": "This action can only be performed inside a server channel.",
			"noDestinations": "There are no {{type}} destinations in this server.",
			"tooManyDestinations": "You have exceeded the max limit of {{type}} destinations (`{{max}}`).",
			"locationQueryHttpError": "There was a problem retrieving the location you provided.```{{err.code}}: {{err.status}}```",
			"invalidUuid": "The provided [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Textual_representation) `{{uuid}}` is invalid.",
			"unknown": "An unknown error has occurred"
		},
		"yes": "Yes",
		"no": "No",
		"coordLocationAskConfirmation": "The location found for coordinates `{{latitude}},{{longitude}}` is **{{info.location}}**.\nIs this correct?",
		"confirmationCancelled": "Confirmation cancelled",
		"promptTimedOut": "You did not respond to the prompt in time.",
		"reportingTo": "Reporting to {{channel, mention}}"
	},
	"events": {
		"interactions": {
			"err": {
				"commandError": "I encountered a problem executing that command. Please try again later."
			}
		}
	},
	"commands": {
		"about": {
			"myStatsTitle": "My Stats",
			"uptimeTitle": "Uptime",
			"applicationPrefix": "Application:",
			"systemPrefix": "System:",
			"runtimeTitle": "Runtime",
			"systemTitle": "System",
			"hostNameTitle": "Host Name",
			"responseTooLong": "A preview of my commits is currently too large to send. You can view my commits [here](https://github.com/{{repo}}/commits)."
		},
		"alerts": {
			"err": {
				"destExists": "This channel is already designated as an alert destination.",
				"noDestByUuid": "No alert destination exists with the UUID `{{uuid}}`.",
				"couldNotRemoveDest": "The alert destination could not be removed. Please try again later.",
				"noDestInChannel": "{{channel, mention}} does not have any alert reporting assigned to it."
			},
			"destCreated": "Alert reporting created in {{channel, mention}}!\nYou can remove this reporting destination by using the `/alerts remove` command with the UUID `{{destination.uuid}}`.",
			"destRemoved": "Alert reporting destination has been successfully removed.",
			"listEmbedTitle": "Alert reporting destinations in this server"
		},
		"debug": {
			"dumpDescription": "A dump of my database taken at {{date}}."
		},
		"forecasts": {
			"err": {
				"noDestByUuid": "No forecast destination exists with the UUID `{{uuid}}`.",
				"couldNotRemoveDest": "The forecast destination could not be removed. Please try again later.",
				"noDestInChannel": "{{channel}} does not have any forecast reporting assigned to it."
			},
			"destCreated": "Hourly forecast reporting created in {{channel, mention}}!\nYou can remove this reporting destination by using the `/forecasts remove` command with the UUID `{{destination.uuid}}`.",
			"destRemoved": "Forecast destination has been successfully removed.",
			"listEmbedTitle": "Forecast reporting destinations in this server"
		},
		"radarChannel": {
			"coordLocationAskConfirmation": "The location found for coordinates `{{latitude}},{{longitude}}` is **{{location.location}}** with the radar image below.\nIs this correct?\n{{location.radarImageUrl}}",
			"destCreated": "Radar channel destination successfully set to {{channel, mention}} and you should see the message appear shortly!\nNote that I will only update my initial message in the channel so you should disallow members from sending messages in it.\nYou can delete my radar message or the channel it is in to remove this destination."
		},
		"radar": {
			"err": {
				"invalidStation": "Invalid station: `{{station}}`."
			},

			"embedTitle": "Radar Loop for {{station}}"
		}
	},
	"jobs": {
		"alerts": {
			"updateTag": "[UPDATE]",
			"certaintyTitle": "Certainty",
			"effectiveTitle": "Effective",
			"expiresTitle": "Expires",
			"affectedAreasTitle": "Affected Areas",
			"instructionsTitle": "Instructions",
			"referencesTitle": "References"
		},
		"forecasts": {
			"embedTitle": "{{forecast.name}}'s Forecast for {{location.location}}",
			"atAGlanceTitle": "At a glance"
		},
		"radar": {
			"embedTitle": "Radar for {{location}}",
			"embedFooter": "The closest station that covers this area is {{radarStation}}.",
			"lastUpdatedTitle": "Last Updated",
			"nextUpdateTitle": "Next Update"
		},
		"status": {
			"activity": "Forecasting for {{duration}} (commit: {{hash}})"
		}
	}
}
